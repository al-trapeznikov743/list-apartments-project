{"version":3,"sources":["components/header/Header.module.sass","components/list_ apartments/ListApartments.module.sass","redux/type.js","redux/rootReducer.js","redux/store.js","components/header/Header.jsx","api/api.js","redux/actions.js","img/apartments.jpg","components/list_ apartments/ListApartments.jsx","components/list_ apartments/ListApartmentsContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SET_APARTMENT_LIKE","SET_LIST_APARTMENT","TOGGLE_IS_FETCHING","SET_CURRENT_PAGE","SET_TOTAL_COUNT","initialState","list","totalCount","currentPage","pageSize","isFetching","reducers","combineReducers","rootReducer","state","action","type","id","like","pageNumber","store","createStore","applyMiddleware","thunkMiddleware","window","getState","Header","className","styles","header","tools","placeholder","top_search","instance","axios","baseURL","api","get","toggleIsFetching","setCurrentPage","ListApartmentsItem","props","postId","square","address","photo","cost","list_wrapper","img","src","alt","description","description_list","description_item","description_title","onClick","setLike","icon_activ","icon","ListApartments","map","item","ref","onPageChangedRef","connect","getList","dispatch","a","response","console","log","data","useState","pageMode","setPageMode","pageCount","Math","ceil","pages","i","push","lastPage","length","loading","onPageChanged","entries","intersectionRatio","nextPage","observer","useRef","options","root","rootMargin","threshold","useCallback","node","current","disconnect","IntersectionObserver","observe","useEffect","then","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fee10e7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3YJyF\",\"tools\":\"Header_tools__2C3eG\",\"top_search\":\"Header_top_search__38xbR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ListApartments_list__zlxD4\",\"list_wrapper\":\"ListApartments_list_wrapper__27gOD\",\"description\":\"ListApartments_description__3LNkh\",\"description_list\":\"ListApartments_description_list__216VN\",\"description_item\":\"ListApartments_description_item__22QWM\",\"description_title\":\"ListApartments_description_title__1hKN7\",\"icon\":\"ListApartments_icon__2pB7G\",\"icon_activ\":\"ListApartments_icon_activ__15Bc2\",\"img\":\"ListApartments_img__yqhqm\"};","export const SET_APARTMENT_LIKE = 'SET_APARTMENT_LIKE'\r\nexport const SET_LIST_APARTMENT = 'SET_LIST_APARTMENT'\r\nexport const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nexport const SET_TOTAL_COUNT = 'SET_TOTAL_COUNT'","import {\r\n    SET_APARTMENT_LIKE,\r\n    SET_CURRENT_PAGE,\r\n    SET_LIST_APARTMENT,\r\n    SET_TOTAL_COUNT,\r\n    TOGGLE_IS_FETCHING\r\n} from './type'\r\n\r\nconst initialState = {\r\n    list: [],\r\n    totalCount : null,\r\n    currentPage: 1,\r\n    pageSize : 12,\r\n    isFetching: false\r\n}\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_APARTMENT_LIKE: {\r\n            return {\r\n                ...state,\r\n                list: [\r\n                    ...state.list,\r\n                    state.list[action.id-1].like = !state.list[action.id-1].like\r\n                ]\r\n            }\r\n        }\r\n        case SET_LIST_APARTMENT: {\r\n            return {\r\n                ...state,\r\n                list: [...state.list, ...action.list]\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber\r\n            }\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {rootReducer} from './rootReducer'\r\n\r\n\r\nconst reducers = combineReducers({\r\n    rootReducer: rootReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nwindow.state = store.getState()\r\n\r\nexport default store","import styles from './Header.module.sass'\n\n\n\nconst Header = () => {\n\n    return <div className={styles.header}>\n        <div className={styles.tools}>\n            <input placeholder='Search' type='text' className={styles.top_search}/>\n        </div>\n    </div>\n}\n\nexport default Header","import * as axios from 'axios'\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://ec2-3-139-90-250.us-east-2.compute.amazonaws.com:8080/'\r\n})\r\n\r\nexport const api = {\r\n    getList(pageNumber = 1, pageSize = 12) {\r\n        return instance.get(`api/apartments?page=${pageNumber}&count=${pageSize}`)\r\n    }\r\n}","import {api} from '../api/api'\r\nimport {\r\n    SET_APARTMENT_LIKE,\r\n    SET_CURRENT_PAGE,\r\n    SET_LIST_APARTMENT,\r\n    TOGGLE_IS_FETCHING,\r\n    SET_TOTAL_COUNT\r\n} from './type'\r\n\r\nexport const setLike = (id) => {\r\n    return {\r\n        type: SET_APARTMENT_LIKE,\r\n        id\r\n    }\r\n}\r\n\r\nexport const setListApartment = (list) => {\r\n    return {\r\n        type: SET_LIST_APARTMENT,\r\n        list\r\n    }\r\n}\r\n\r\nconst toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\n\r\nconst setCurrentPage = (pageNumber) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        pageNumber\r\n    }\r\n}\r\nconst setTotalCount = (totalCount) => {\r\n    return {\r\n        type: SET_TOTAL_COUNT,\r\n        totalCount\r\n    }\r\n}\r\n\r\nexport const getList = (pageNumber, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(pageNumber))\r\n\r\n        const response = await api.getList(pageNumber, pageSize)\r\n\r\n        console.log(response)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setListApartment(response.data.data))\r\n        dispatch(setTotalCount(response.data.totalCount))\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/apartments.cb0af314.jpg\";","import React from 'react'\r\nimport styles from './ListApartments.module.sass'\r\nimport img from '../../img/apartments.jpg'\r\n\r\nconst ListApartments = (props) => {\r\n\r\n    return <div className={styles.list}>\r\n        {props.list.map(item => {\r\n            return <ListApartmentsItem\r\n                key={item.id}\r\n                postId={item.id}\r\n                square={item.square}\r\n                address={item.address}\r\n                photo={img}\r\n                cost={item.cost}\r\n                like={item.like}\r\n                setLike={props.setLike}\r\n            />\r\n        })}\r\n        <div ref={props.onPageChangedRef}></div>\r\n    </div>\r\n}\r\n\r\n\r\nconst ListApartmentsItem = (props) => {\r\n\r\n    const {postId, square, address, photo, cost} = props\r\n\r\n    const toggleLIke = () => {\r\n        props.setLike(postId)\r\n    }\r\n\r\n    return <div className={styles.list_wrapper}>\r\n        <img className={styles.img} src={photo || ''} alt=\"img\"/>\r\n        <div className={styles.description}>\r\n            <div className={styles.description_list}>\r\n                <span className={styles.description_item}>Площадь: {square} кв.м</span>\r\n                <span className={styles.description_item}>Адрес: {address}</span>\r\n                <span className={styles.description_item}>Цена: {cost}</span>\r\n            </div>\r\n            <div className={styles.description_title}>\r\n                <span>Подробности</span>\r\n            </div>\r\n            <div>\r\n                <span onClick={toggleLIke}>\r\n                    <i className={`fas fa-heart ${props.like ? styles.icon_activ : styles.icon}`}></i>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default ListApartments","import React, {useCallback, useEffect, useRef, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {setLike, getList} from '../../redux/actions'\r\nimport ListApartments from './ListApartments'\r\n\r\n\r\nconst ListApartmentsContainer = (props) => {\r\n\r\n    const [pageMode, setPageMode] = useState(true)\r\n\r\n    const pageCount = Math.ceil(props.totalCount/props.pageSize)\r\n\r\n    const pages = []\r\n\r\n    for(let i = 0; i < pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const lastPage = pages[pages.length-1]\r\n\r\n    // intersectionObserver\r\n    const loading = props.isFetching\r\n\r\n    const onPageChanged = (entries) => {\r\n        if(loading || pageMode) {\r\n            return undefined\r\n        }\r\n        if(entries[0].intersectionRatio > 0) {\r\n            const nextPage = props.currentPage + 1\r\n            if (nextPage > lastPage+1) {\r\n                return undefined\r\n            }\r\n            props.getList(nextPage, props.pageSize)\r\n        }\r\n    }\r\n\r\n\r\n    const observer = useRef()\r\n    const options = {\r\n        root: null,\r\n        rootMargin: '250px',\r\n        threshold: 0.1\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    const onPageChangedRef = useCallback(node => {\r\n        if(observer.current) {\r\n            observer.current.disconnect()\r\n        }\r\n        observer.current = new IntersectionObserver(onPageChanged, options)\r\n        if(node) {\r\n            observer.current.observe(node)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.getList(props.currentPage, props.pageSize).then(() => {\r\n            setPageMode(false)\r\n        })\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return <ListApartments\r\n        list={props.list}\r\n        setLike={props.setLike}\r\n        currentPage={props.currentPage}\r\n        totalCount={props.totalCount}\r\n        onPageChangedRef={onPageChangedRef}\r\n    />\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        list: state.rootReducer.list,\r\n        totalCount: state.rootReducer.totalCount,\r\n        pageSize: state.rootReducer.pageSize,\r\n        isFetching: state.rootReducer.isFetching,\r\n        currentPage: state.rootReducer.currentPage\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setLike, getList})(ListApartmentsContainer)","import {Provider} from 'react-redux'\nimport store from './redux/store'\nimport Header from './components/header/Header'\nimport ListApartmentsContainer from './components/list_ apartments/ListApartmentsContainer'\nimport './sass/general.sass'\nimport './css/fontawesome.min.css'\nimport './css/solid.min.css'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className='app'>\n        <Header/>\n        <ListApartmentsContainer/>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}